# default test
## install flume-ng in cloudera
telnet 127.0.0.1 9999
cat /var/log/flume-ng/flume-cmf-flume-AGENT-node0.log

# netcat to hdfs
tier1.sources  = source1
tier1.channels = channel1
tier1.sinks    = sink1

tier1.sources.source1.type     = netcat
tier1.sources.source1.bind     = 127.0.0.1
tier1.sources.source1.port     = 9999
tier1.sources.source1.channels = channel1
tier1.channels.channel1.type   = memory
tier1.sinks.sink1.type         = hdfs
tier1.sinks.sink1.fileType     = DataStream
tier1.sinks.sink1.channel      = channel1
tier1.sinks.sink1.hdfs.path    = hdfs://node0:8020/tmp

tier1.channels.channel1.capacity = 100

# spooldir to hdfs
mkdir -p /tmp/flume/spooldirTest
chmod -R 777 /tmp/flume/

tier1.sources  = source1
tier1.channels = channel1
tier1.sinks    = sink1

tier1.sources.source1.type     = spooldir
tier1.sources.source1.spoolDir = /tmp/flume/spooldirTest
tier1.sources.source1.channels = channel1
tier1.channels.channel1.type   = memory
tier1.sinks.sink1.type         = hdfs
tier1.sinks.sink1.fileType     = DataStream
tier1.sinks.sink1.channel      = channel1
tier1.sinks.sink1.hdfs.path    = hdfs://node0:8020/tmp

tier1.channels.channel1.capacity = 100

# spooldir to org.apache.flume.sink.solr.morphline.MorphlineSolrSink
mkdir -p /tmp/flume/morphlineSolrSinkTest
chmod -R 777 /tmp/flume/

tier1.sources  = source1
tier1.channels = channel1
tier1.sinks    = sink1

tier1.sources.source1.type     = spooldir
tier1.sources.source1.spoolDir = /tmp/flume/morphlineSolrSinkTest
tier1.sources.source1.channels = channel1
tier1.channels.channel1.type   = memory
tier1.sinks.sink1.type         = org.apache.flume.sink.solr.morphline.MorphlineSolrSink
tier1.sinks.sink1.channel      = channel1
tier1.sinks.sink1.morphlineFile    = /tmp/morphlineSolrSinkTest

tier1.channels.channel1.capacity = 100

vi /tmp/morphlineSolrSinkTest
morphlines : [
  {
    id : morphline1
    importCommands : ["org.kitesdk.**"]
    
    commands : [                    
      { 
        readJson {}
      } 
#     { extractJsonPaths {} }
      { logInfo { format : "output record: {}", args : ["@{}"] } }    
    ]
  }
]
